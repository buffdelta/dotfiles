#--------------------------------------------"
#  ______  ___   _____ _   _ ______  _____   "
#  | ___ \/ _ \ /  ___| | | || ___ \/  __ \  "
#  | |_/ / /_\ \\ `--.| |_| || |_/ /| /  \/  "
#  | ___ \  _  | `--. \  _  ||    / | |      "
#  | |_/ / | | |/\__/ / | | || |\ \ | \__/\  "
#  \____/\_| |_/\____/\_| |_/\_| \_| \____/  "
#                                            "
#--------------------------------------------"

export EDITOR='vim'

# Colors for less
export LESS_TERMCAP_mb=$(tput bold; tput setaf 1) # green
export LESS_TERMCAP_md=$(tput bold; tput setaf 108)
export LESS_TERMCAP_me=$(tput bold; tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 16; tput setab 219) # yellow on blue
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 7) # white
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)
export GROFF_NO_SGR=1         # For Konsole and Gnome-terminal

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=always'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll=GetLongList
alias la='ls -A'
alias l='ls -CF'

function GetLongList() {
    ls -AlhFgo --group-directories-first | sed -E '2,$s/ +[0-9]+//' | tail +2
}

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [[ $- == *i* ]]; then
    neofetch
    COLS=$(tput cols)
    for ((i = 0; i < COLS; i++)); do
        echo -n "─";
    done
fi

# Display weather on terminal start up
# ? = Beginning of request
# 0 = Display current temperature
# u = Display temperature in Fahrenheit
CURL_RETURN_CODE=0
/usr/bin/timeout --preserve-status 1.0 curl -s -f wttr.in/?0u || CURL_RETURN_CODE=$?
if [ ${CURL_RETURN_CODE} == 0 ]; then
    COLS=$(tput cols)
    for ((i = 0; i < COLS; i++)); do
        echo -n "─";
    done
fi

# TODO fix git branch to work correctly
function git_branch() {
    BRANCH_COLOR=''
    BRANCH=''
    if git rev-parse --is-inside-work-tree &> /dev/null; then
        BRANCH_COLOR='\[\033[0;31m\]'
        BRANCH=$(git branch --show-current)
        if git diff --quiet && git diff --cached --quiet; then
            BRANCH_COLOR='\[\033[0;32m\]'
        fi
#        unpushed=$(git log origin/$(git branch --show-current)..HEAD --oneline)
        if [[ -n $(git log origin/$(git branch --show-current)..HEAD --oneline) ]]; then
            BRANCH_COLOR='\[\033[0;33m\]'
        fi
    fi
}

function make_prompt() {
    PS1='${debian_chroot:+($debian_chroot)}\[\033[38;5;108m\]\u\[\033[38;5;219m\]@\[\033[38;5;108m\]\h:\[\033[38;5;219m\]\w'
    git_branch
    if [ "$BRANCH" ]; then
        PS1+="$BRANCH_COLOR (${BRANCH}) "
    fi
    PS1+='\[\033[0m\]\$ '
}

PROMPT_COMMAND=make_prompt

# https://askubuntu.com/questions/466198/how-do-i-change-the-color-for-directories-with-ls-in-the-console

LS_COLORS="di=38;5;219:"  # Directory Color
LS_COLORS+="ln=38;5;30:"     # Symlink Color
LS_COLORS+="mi=1;94:"     # Missing Symlink Color
LS_COLORS+="ex=38;5;108:" # Executable Color
export LS_COLORS
