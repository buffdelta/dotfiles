"--------------------------------------"
"   _   _ ________  _________  _____   "
"  | | | |_   _|  \/  || ___ \/  __ \  "
"  | | | | | | | .  . || |_/ /| /  \/  "
"  | | | | | | | |\/| ||    / | |      "
"  \ \_/ /_| |_| |  | || |\ \ | \__/\  "
"   \___/ \___/\_|  |_/\_| \_| \____/  "
"                                      "
"--------------------------------------"

set hidden

" Map keyboard combo, left-control, w, t to create a new terminal window
map <C-w>t :tab terminal<CR>

nnoremap <M-Left> <C-O>
nnoremap <M-Right> <C-I>

" Copy to clipboard
vnoremap <C-y> :call Get_Visual_Selection()<CR>

" https://stackoverflow.com/questions/1533565/how-to-get-visually-selected-text-in-vimscript
function! Get_Visual_Selection()
    " Why is this not a built-in Vim script function?!
    let [line_start, column_start] = getpos("'<")[1:2]
    let [line_end, column_end] = getpos("'>")[1:2]
    let lines = getline(line_start, line_end)
    if len(lines) == 0
        return ''
    endif
    let lines[-1] = lines[-1][: column_end - (&selection == 'inclusive' ? 1 : 2)]
    let lines[0] = lines[0][column_start - 1:]
    echo strings 
    " execute "! echo -e ".strings." | clip.exe"
endfunction

" Terminal accerleration
set ttyfast

" Since we are using airline, this will disable prompts of which mode we are in
set noshowmode

" Backspace over everything
set backspace=indent,eol,start

" Show the title
set title

" Current line is current line number, the rest of the line numbers are relative to it
set number relativenumber

" Make number column default a width two
set numberwidth=2

" Display a list of possible commands/attributes when tab is pressed
set wildmenu

" Always show current position
set ruler

" Ignore case while searching
set ignorecase

" Be smart about cases when searching
set smartcase

" Highlist search hits
set hlsearch

" Search similar to browsers
set incsearch

" Show matching brackets when hovering over a bracket
set showmatch

" Blink every how many tenths of a second

" Syntax highlighting
syntax enable

" Auto indent
set autoindent
" Smart indent
set smartindent

" Wrap lines
set nowrap

" Coverts tabs into spaces
set expandtab

" How long is tab
set tabstop=4

" How long is Shift-<, or Shift->
set shiftwidth=4

" Highlight current line/line-number
set cursorline

" Remove tilde characters at the end of the buffer
set fillchars=eob:\

" Explicitly set vertical split character
set fillchars+=vert:\|

colorscheme calm

" Hide *.swp files in Netrw
let g:netrw_list_hide= '.*\.swp$,.DS_Store,*/tmp/*,*.so,*.swp,*.zip,*.git,^\.\.\=/\=$'

" Always show status line
set laststatus=2

set virtualedit=onemore

let g:airline_highlighting_cache = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_close_button = 0
let g:airline_theme='calm'

" If filetype is text or markdown, set spellcheck
autocmd Filetype text setlocal spell
autocmd Filetype markdown setlocal spell

" If filetype is html, highlight TODO, FIXME, and XXX if it is in a comment
autocmd Filetype html syn keyword htmlCommentTodo TODO FIXME XXX containedin=htmlComment contained
autocmd Filetype html hi def link htmlCommentTodo Todo

function! SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc
